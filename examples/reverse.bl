# Reverse Program (using addressable memory)
# Written by John Hippisley

# Read inputted string into memory until newline
MOV R0, 0	# Holds current character
MOV R1, 10	# Newline
MOV R2, 1	# Loop flag
MOV R3, 0	# Write index
WHILE R2
	GETCHAR R0
	WRITE R3, R0
	INC R3
	MOV R2, R0
	CMP R2, R1
	NOT R2
ENDWHILE

PRINT "Reversed: "
# Print reversed output
DEC R3
WHILE R3
	DEC R3
	READ R0, R3
	PUTCHAR R0
ENDWHILE
PUTCHAR 10
